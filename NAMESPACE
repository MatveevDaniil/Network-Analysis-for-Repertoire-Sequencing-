export(installPythonModules)
export(buildRepSeqNetwork)
export(findPublicClusters)
export(buildPublicClusterNetwork)
export(buildPublicClusterNetworkByRepresentative)
export(findAssociatedSeqs)
export(findAssociatedSeqs2)
export(findAssociatedClones)
export(buildAssociatedClusterNetwork)
export(kmeansAtchley)
export(generateNetworkObjects)
export(generateNetworkGraphPlots)
export(plotNetworkGraph)
export(addNodeNetworkStats)
export(node_stat_settings)
export(chooseNodeStats)
export(addClusterMembership)
export(getClusterStats)
export(generateNetworkFromAdjacencyMat)
export(sparseAdjacencyMatFromSeqs)
export(adjacencyMatAtchleyFromSeqs)
export(encodeTCRSeqsByAtchleyFactor)
export(filterInputData)
export(getNeighborhood)
export(aggregateIdenticalClones)
export(loadDataFromFileList)
export(combineSamples)
export(saveNetwork)
export(saveNetworkPlots)
export(simulateToyData)

useDynLib(NAIR, .registration=TRUE)

importFrom(igraph, cluster_fast_greedy)
importFrom(igraph, cluster_edge_betweenness)
importFrom(igraph, cluster_fluid_communities)
importFrom(igraph, cluster_infomap)
importFrom(igraph, cluster_label_prop)
importFrom(igraph, cluster_leading_eigen)
importFrom(igraph, cluster_leiden)
importFrom(igraph, cluster_louvain)
importFrom(igraph, cluster_optimal)
importFrom(igraph, cluster_spinglass)
importFrom(igraph, cluster_walktrap)

export(cluster_fast_greedy)
export(cluster_edge_betweenness)
export(cluster_fluid_communities)
export(cluster_infomap)
export(cluster_label_prop)
export(cluster_leading_eigen)
export(cluster_leiden)
export(cluster_louvain)
export(cluster_optimal)
export(cluster_spinglass)
export(cluster_walktrap)

exportPattern("^[[:alpha:]]+")
